<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<groupId>com.kaidin</groupId>
		<artifactId>kaidinFrame</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>kaidin-gui</artifactId>
	<name>kaidin-gui</name>
	<packaging>war</packaging>

	<scm>
		<developerConnection>徐小斌</developerConnection>
	</scm>

	<dependencies>
		<!-- 内部工程依赖 -->
		<dependency>
			<groupId>com.kaidin</groupId>
			<artifactId>kaidin-db-orm</artifactId>
		</dependency>
		<!-- spring依赖 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<!-- 日志打印依赖 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<!-- 单元测试依赖 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>kaidin</finalName>
<!--		<plugins>-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-war-plugin</artifactId>-->
<!--				<version>2.2</version>-->
<!--				<configuration>-->
<!--					<useCache>false</useCache>-->
<!--					&lt;!&ndash;<filters>-->
<!--						<filter>src/main/resources/IProject-test.properties</filter>-->
<!--					</filters>&ndash;&gt;-->
<!--					-->
<!--					&lt;!&ndash; In version 2.1-alpha-1, this was incorrectly named warSourceExcludes &ndash;&gt;-->
<!--					<packagingExcludes>WEB-INF/lib/spring-.*.jar,-->
<!--						%regex[WEB-INF/lib/(?!db-orm).*.jar]</packagingExcludes>-->
<!--					&lt;!&ndash; 打包之前过滤掉不想要被打进 .war包的jar,-->
<!--					注意：这个地方，本来路径应该是WEB-INF/lib/anaalyzer-2.0.4.jar,-->
<!--					是经过多次试验,不能这样，至于咋回事儿，搞不清楚，经多方查证均无结果-->
<!--					暂且这样吧，虽然显得很丑陋，但是总能解决问题吧 &ndash;&gt;-->
<!--					<warSourceExcludes>*/lib/spring*.jar</warSourceExcludes>-->
<!--					<archive>-->
<!--						<manifest>-->
<!--							<addClasspath>true</addClasspath>-->
<!--							<classpathPrefix>lib/</classpathPrefix>-->
<!--						</manifest>-->
<!--						<addMavenDescriptor>true</addMavenDescriptor>-->
<!--					</archive>-->
<!--					<webResources>-->
<!--						<resource>-->
<!--							&lt;!&ndash; 元配置文件的目录，相对于pom.xml文件的路径 &ndash;&gt;-->
<!--							<directory>${basedir}/src/main/webapp/WEB-INF</directory>-->
<!--							&lt;!&ndash; 是否过滤文件，也就是是否启动auto-config的功能 &ndash;&gt;-->
<!--							<filtering>true</filtering>-->
<!--							<targetPath>WEB-INF</targetPath>-->
<!--						</resource>-->
<!--					</webResources>-->
<!--				</configuration>-->
<!--			</plugin>-->
<!--		</plugins>-->
	</build>
</project>
